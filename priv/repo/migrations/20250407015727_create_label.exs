defmodule AshPg.Repo.Migrations.CreateLabel do
  @moduledoc """
  Updates resources based on their most recent snapshots.

  This file was autogenerated with `mix ash_postgres.generate_migrations`
  """

  use Ecto.Migration

  def up do
    create table(:labels_versions, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("uuid_generate_v7()"), primary_key: true
      add :version_action_type, :text, null: false
      add :version_action_name, :text, null: false
      add :version_source_id, :uuid, null: false
      add :changes, :map

      add :version_inserted_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :version_updated_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")
    end

    create table(:labels, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("uuid_generate_v7()"), primary_key: true
    end

    alter table(:labels_versions) do
      modify :version_source_id,
             references(:labels,
               column: :id,
               name: "labels_versions_version_source_id_fkey",
               type: :uuid,
               prefix: "public"
             )
    end

    alter table(:labels) do
      add :name, :text, null: false
      add :archived_at, :utc_datetime_usec
    end

    alter table(:artists) do
      add :label_id,
          references(:labels,
            column: :id,
            name: "artists_label_id_fkey",
            type: :uuid,
            prefix: "public"
          )
    end
  end

  def down do
    drop constraint(:artists, "artists_label_id_fkey")

    alter table(:artists) do
      remove :label_id
    end

    alter table(:labels) do
      remove :archived_at
      remove :name
    end

    drop constraint(:labels_versions, "labels_versions_version_source_id_fkey")

    alter table(:labels_versions) do
      modify :version_source_id, :uuid
    end

    drop table(:labels)

    drop table(:labels_versions)
  end
end
